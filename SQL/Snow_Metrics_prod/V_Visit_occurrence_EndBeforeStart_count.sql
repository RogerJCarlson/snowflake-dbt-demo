USE DATABASE SH_OMOP_DB_PROD;
USE SCHEMA CDM;
USE ROLE SF_SH_OMOP_DEVELOPER;
USE WAREHOUSE SH_OMOP_DATA_SCIENCE_WH;

CREATE OR REPLACE VIEW OMOP_QA.V_VISIT_OCCURRENCE_END_BEFORE_START_COUNT AS (
---------------------------------------------------------------------
--VISIT_OCCURRENCE_END_BEFORE_START_COUNT
---------------------------------------------------------------------
WITH END_BEFORE_START_COUNT AS (
SELECT 'VISIT_END_DATETIME' AS METRIC_FIELD, 'END_BEFORE_START' AS QA_METRIC, 'INVALID DATA' AS ERROR_TYPE, COUNT(*) AS CNT
FROM CDM.VISIT_OCCURRENCE 
WHERE VISIT_END_DATETIME < VISIT_START_DATETIME
)
	
--INSERT INTO OMOP_QA.QA_LOG   (    
--	 RUN_DATE
--    ,STANDARD_DATA_TABLE
--    ,QA_METRIC
--	,METRIC_FIELD
--    ,QA_ERRORS
--	,ERROR_TYPE
--	,TOTAL_RECORDS)
SELECT CAST(GETDATE() AS DATE) AS RUN_DATE
	, 'VISIT_OCCURRENCE' AS STANDARD_DATA_TABLE
	, 'END_BEFORE_START' AS QA_METRIC
	, 'VISIT_END_DATETIME'  AS METRIC_FIELD
	, COALESCE(SUM(CNT),0) AS QA_ERRORS
	, CASE WHEN SUM(CNT) IS NOT NULL AND SUM(CNT) <> 0 THEN ERROR_TYPE ELSE NULL END   AS ERROR_TYPE
	, (SELECT COUNT(*) AS NUM_ROWS FROM CDM.VISIT_OCCURRENCE) AS TOTAL_RECORDS
FROM END_BEFORE_START_COUNT
GROUP BY METRIC_FIELD, QA_METRIC, ERROR_TYPE
);
