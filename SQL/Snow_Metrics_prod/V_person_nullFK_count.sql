USE DATABASE SH_OMOP_DB_PROD;
USE SCHEMA CDM;
USE ROLE SF_SH_OMOP_DEVELOPER;
USE WAREHOUSE SH_OMOP_DATA_SCIENCE_WH;


CREATE OR REPLACE VIEW OMOP_QA.V_PERSON_NULLFK_COUNT AS (
---------------------------------------------------------------------
--PERSON_NULLFK_COUNT
---------------------------------------------------------------------
WITH NULLFK_COUNT AS (
	SELECT 'LOCATION_ID' AS METRIC_FIELD,'NULL FK' AS QA_METRIC,'WARNING' AS ERROR_TYPE
		,COUNT(*) AS CNT
	FROM CDM.PERSON AS T1
	WHERE (LOCATION_ID IS NULL)
UNION ALL
	SELECT 'PROVIDER_ID' AS METRIC_FIELD,'NULL FK' AS QA_METRIC,'WARNING' AS ERROR_TYPE
		,COUNT(*) AS CNT
	FROM CDM.PERSON AS T1
	WHERE (PROVIDER_ID IS NULL)
UNION ALL
	SELECT 'CARE_SITE_ID' AS METRIC_FIELD,'NULL FK' AS QA_METRIC,'WARNING' AS ERROR_TYPE
		,COUNT(*) AS CNT
	FROM CDM.PERSON AS T1
	WHERE (CARE_SITE_ID IS NULL)
)
--	
--INSERT INTO OMOP_QA.QA_LOG   (    
--		RUN_DATE
--      ,STANDARD_DATA_TABLE
--      ,QA_METRIC
--		,METRIC_FIELD
--      ,QA_ERRORS
--      ,ERROR_TYPE
--	  ,TOTAL_RECORDS)
SELECT CAST(GETDATE() AS DATE) AS RUN_DATE
	,'PERSON' AS STANDARD_DATA_TABLE
	, QA_METRIC AS QA_METRIC	
	, METRIC_FIELD  AS METRIC_FIELD
	, COALESCE(SUM(CNT),0) AS QA_ERRORS
	, CASE WHEN SUM(CNT) <> 0 THEN ERROR_TYPE ELSE NULL END   AS ERROR_TYPE
	, (SELECT COUNT(*) AS NUM_ROWS FROM CDM.PERSON) AS TOTAL_RECORDS	
FROM NULLFK_COUNT
	GROUP BY  METRIC_FIELD, QA_METRIC, ERROR_TYPE
);
