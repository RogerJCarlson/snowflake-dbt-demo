USE DATABASE SH_OMOP_DB_PROD;
USE SCHEMA CDM;
USE ROLE SF_SH_OMOP_DEVELOPER;
USE WAREHOUSE SH_OMOP_DATA_SCIENCE_WH;


CREATE OR REPLACE VIEW OMOP_QA.V_DEVICE_EXPOSURE_NOVISIT_COUNT AS (
---------------------------------------------------------------------
--DEVICE_EXPOSURE_NOVISIT_COUNT
---------------------------------------------------------------------
WITH CTE_NO_VISIT_COUNT AS (
	SELECT 'DEVICE_EXPOSURE' AS STANDARD_DATA_TABLE
		,'DEVICE_CONCEPT_ID' AS METRIC_FIELD
		,'NO VISIT' AS QA_METRIC
		,'FATAL' AS ERROR_TYPE
		,COUNT(*) AS CNT
	FROM CDM.DEVICE_EXPOSURE
	LEFT JOIN CDM.VISIT_OCCURRENCE ON DEVICE_EXPOSURE.VISIT_OCCURRENCE_ID = VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID
	WHERE (VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID IS NULL)
)
--INSERT INTO OMOP_QA.QA_LOG   (    
--		RUN_DATE
--      ,STANDARD_DATA_TABLE
--      ,QA_METRIC
--	  ,METRIC_FIELD
--      ,QA_ERRORS
--      ,ERROR_TYPE
--	  ,TOTAL_RECORDS)
SELECT CAST(GETDATE() AS DATE) AS RUN_DATE
	,STANDARD_DATA_TABLE
	, QA_METRIC AS QA_METRIC
	, METRIC_FIELD  AS METRIC_FIELD
	, COALESCE(SUM(CNT),0) AS QA_ERRORS
	, CASE WHEN SUM(CNT) IS NOT NULL AND SUM(CNT) <> 0 THEN 'FATAL' ELSE NULL END   AS ERROR_TYPE
	,(SELECT COUNT(*) AS NUM_ROWS FROM CDM.DEVICE_EXPOSURE) AS TOTAL_RECORDS	
FROM CTE_NO_VISIT_COUNT
GROUP BY   STANDARD_DATA_TABLE, METRIC_FIELD, QA_METRIC, ERROR_TYPE	
);
