USE DATABASE SH_OMOP_DB_PROD;
USE SCHEMA CDM;
USE ROLE SF_SH_OMOP_DEVELOPER;
USE WAREHOUSE SH_OMOP_DATA_SCIENCE_WH;

--DROP VIEW CDM.V_CONDITION_OCCURRENCE_NONSTANDARD_DETAIL;
CREATE OR REPLACE VIEW OMOP_QA.V_CONDITION_OCCURRENCE_NONSTANDARD_DETAIL AS (

---------------------------------------------------------------------
------CONDITION_OCCURRENCE_NONSTANDARD_DETAIL ----------------------------------------
---------------------------------------------------------------------

WITH NONSTANDARD_DETAIL
AS (
	SELECT 'CONDITION_CONCEPT_ID' AS METRIC_FIELD, 'NON-STANDARD' AS QA_METRIC, 'INVALID DATA' AS ERROR_TYPE
		, CONDITION_OCCURRENCE_ID AS CDT_ID
	FROM CDM.CONDITION_OCCURRENCE AS CO
	LEFT JOIN CDM.CONCEPT AS C
		ON CO.CONDITION_CONCEPT_ID = C.CONCEPT_ID AND upper(C.DOMAIN_ID) = 'CONDITION' AND upper(C.VOCABULARY_ID) =  'SNOMED'
	WHERE CONDITION_CONCEPT_ID <> 0 AND CONDITION_CONCEPT_ID IS NOT NULL AND (STANDARD_CONCEPT <> 'S' OR STANDARD_CONCEPT IS NULL)
	
	UNION ALL
	
	SELECT 'CONDITION_TYPE_CONCEPT_ID' AS METRIC_FIELD, 'NON-STANDARD' AS QA_METRIC, 'INVALID DATA' AS ERROR_TYPE
		, CONDITION_OCCURRENCE_ID AS CDT_ID
	FROM CDM.CONDITION_OCCURRENCE AS CO
	LEFT JOIN CDM.CONCEPT AS C
		ON CO.CONDITION_TYPE_CONCEPT_ID = C.CONCEPT_ID AND upper(C.DOMAIN_ID) = 'TYPE CONCEPT' AND upper(C.CONCEPT_CLASS_ID) =  'TYPE CONCEPT'
	WHERE CONDITION_TYPE_CONCEPT_ID <> 0 AND CONDITION_TYPE_CONCEPT_ID IS NOT NULL AND (STANDARD_CONCEPT <> 'S' OR STANDARD_CONCEPT IS NULL)
	
	UNION ALL
	
	SELECT 'CONDITION_SOURCE_CONCEPT_ID' AS METRIC_FIELD, 'NON-STANDARD' AS QA_METRIC, 'INVALID DATA' AS ERROR_TYPE
		, CONDITION_OCCURRENCE_ID AS CDT_ID
	FROM CDM.CONDITION_OCCURRENCE AS CO
	LEFT JOIN CDM.CONCEPT AS C
		ON CO.CONDITION_SOURCE_CONCEPT_ID = C.CONCEPT_ID AND upper(C.DOMAIN_ID) = 'CONDITION' AND C.CONCEPT_CLASS_ID IN ('ICD9CM','ICD10CM')
	WHERE CONDITION_SOURCE_CONCEPT_ID <> 0 AND CONDITION_SOURCE_CONCEPT_ID IS NOT NULL AND (C.CONCEPT_ID IS NOT NULL)
	
	UNION ALL
	
	SELECT 'CONDITION_STATUS_CONCEPT_ID' AS METRIC_FIELD, 'NON-STANDARD' AS QA_METRIC, 'INVALID DATA' AS ERROR_TYPE
		, CONDITION_OCCURRENCE_ID AS CDT_ID
	FROM CDM.CONDITION_OCCURRENCE AS CO
	LEFT JOIN CDM.CONCEPT AS C
		ON CO.CONDITION_STATUS_CONCEPT_ID = C.CONCEPT_ID AND upper(C.DOMAIN_ID) = 'OBSERVATION' AND upper(C.VOCABULARY_ID) =  'SNOMED' AND upper(C.CONCEPT_CLASS_ID) =  'QUALIFIER VALUE'
	WHERE CONDITION_STATUS_CONCEPT_ID <> 0 AND CONDITION_STATUS_CONCEPT_ID IS NOT NULL AND (STANDARD_CONCEPT <> 'S' OR STANDARD_CONCEPT IS NULL)
	)

--INSERT INTO OMOP_QA.QA_ERR(    
--	 RUN_DATE
--    ,STANDARD_DATA_TABLE
--    ,QA_METRIC
--	,METRIC_FIELD
--    ,ERROR_TYPE
--	,CDT_ID)
	
SELECT CAST( GETDATE() AS DATE) AS RUN_DATE
	,'CONDITION_OCCURRENCE' AS STANDARD_DATA_TABLE
	, QA_METRIC AS QA_METRIC
	, METRIC_FIELD  AS METRIC_FIELD
	, ERROR_TYPE
	, CDT_ID
FROM NONSTANDARD_DETAIL		
  WHERE ERROR_TYPE <>'EXPECTED'	
 );
 