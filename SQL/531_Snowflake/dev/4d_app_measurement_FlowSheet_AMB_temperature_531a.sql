/*******************************************************************************
# Copyright 2020 Spectrum Health 
# http://www.spectrumhealth.org
#
# Unless required by applicable law or agreed to in writing, this software
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
# either express or implied.
#
********************************************************************************/

/*******************************************************************************
Name: app_measurement_FlowSheet_AMB_temperature_2.sql

Author: Roger Carlson
		Spectrum Health
		roger.carlson@spectrumhealth.org

Last Revised: 14-June-2020
		
Description: This script is the 2nd it a two-part process.  It is used in conjunction with 
	(and following) pull_measurement_FlowSheet_AMB_ALL_2.sql. 

	Its purpose is to join the data in OMOP_Clarity.MEASUREMENT_ClarityAMB_FlowSheet to the OMOP concept table
	to return standard concept ids, and append this data to CDM.measurement.

Structure: (if your structure is different, you will have to modify the code to match)
	Database:EpicCare
	Schemas: EpicCare.OMOP, EpicCare.OMOP_Clarity

Note: I don't use aliases unless necessary for joining. I find them more confusing than helpful.

********************************************************************************/

--USE DATABASE SH_OMOP_DB_PROD;
----USE SCHEMA OMOP_CLARITY;
--USE ROLE SF_SH_OMOP_DEVELOPER;
--USE WAREHOUSE SH_OMOP_DATA_SCIENCE_WH;

--DELETE FROM CDM.MEASUREMENT
--WHERE ETL_MODULE = 'MEASUREMENT--CLARITYAMB--FLOWSHEET_TEMP';

INSERT INTO CDM.MEASUREMENT (
--	MEASUREMENT_ID 
    PERSON_ID
	,MEASUREMENT_CONCEPT_ID
	,MEASUREMENT_DATE
	,MEASUREMENT_DATETIME
	,MEASUREMENT_TYPE_CONCEPT_ID
	,OPERATOR_CONCEPT_ID
	,VALUE_AS_NUMBER
	,VALUE_AS_CONCEPT_ID
	,UNIT_CONCEPT_ID
	,RANGE_LOW
	,RANGE_HIGH
	,PROVIDER_ID
	,VISIT_OCCURRENCE_ID
	,VISIT_DETAIL_ID 
	,MEASUREMENT_SOURCE_VALUE
	,MEASUREMENT_SOURCE_CONCEPT_ID
	,UNIT_SOURCE_VALUE
	,VALUE_SOURCE_VALUE
	,ETL_MODULE
	,VISIT_SOURCE_VALUE	
	)
	
WITH T_TEMPERATURE
AS (
	--TEMPERATURE
	SELECT DISTINCT PERSON_ID
		,PAT_ENC_CSN_ID
		,RECORDED_TIME
		,MEAS_VALUE
		,MINVALUE
		,MAX_VAL
		,FLO_MEAS_NAME
		,FLO_MEAS_ID
		,FSD_ID
		,VISIT_PROV_ID
		,PCP_PROV_ID
		,ENC_TYPE_C
	
	FROM OMOP_CLARITY.MEASUREMENT_CLARITYAMB_FLOWSHEET
	
	INNER JOIN CDM.SOURCE_TO_CONCEPT_MAP AS SOURCE_TO_CONCEPT_MAP_FLOWSHEET_MEAS
		ON (FLO_MEAS_ID::VARCHAR = SOURCE_TO_CONCEPT_MAP_FLOWSHEET_MEAS.SOURCE_CODE
			AND UPPER(SOURCE_TO_CONCEPT_MAP_FLOWSHEET_MEAS.SOURCE_VOCABULARY_ID) = 'SH_FLWSHT_MEAS_TEMP')
	)
	,T_TEMP_SOURCE
AS (
	-- TEMPERATURE SOURCE
	SELECT DISTINCT PERSON_ID
		,PAT_ENC_CSN_ID
		,RECORDED_TIME
		,MEAS_VALUE AS MEAS_VALUE
	
	FROM OMOP_CLARITY.MEASUREMENT_CLARITYAMB_FLOWSHEET
	
	WHERE FLO_MEAS_ID IN ('7')
	)
	,T_TEMPERATURE_MERGE
AS (
	SELECT T_TEMPERATURE.PERSON_ID
		,T_TEMPERATURE.PAT_ENC_CSN_ID
		,TARGET_CONCEPT_ID AS TARGET_CONCEPT_ID --TEMPERATURE SOURCE
		,T_TEMPERATURE.RECORDED_TIME
		,T_TEMPERATURE.MEAS_VALUE AS MEAS_VALUE
		,T_TEMPERATURE.MINVALUE
		,T_TEMPERATURE.MAX_VAL
		,T_TEMPERATURE.FLO_MEAS_NAME
		,SOURCE_TO_CONCEPT_MAP_FLOWSHEET_TEMP_SRC.SOURCE_CODE_DESCRIPTION
		,T_TEMPERATURE.FLO_MEAS_ID
		,T_TEMPERATURE.FSD_ID
		,T_TEMPERATURE.VISIT_PROV_ID
		,T_TEMPERATURE.PCP_PROV_ID
		,ENC_TYPE_C
	
	FROM T_TEMPERATURE
	
	LEFT JOIN T_TEMP_SOURCE
		ON T_TEMPERATURE.PAT_ENC_CSN_ID = T_TEMP_SOURCE.PAT_ENC_CSN_ID
			AND T_TEMPERATURE.RECORDED_TIME = T_TEMP_SOURCE.RECORDED_TIME
	
	LEFT JOIN CDM.SOURCE_TO_CONCEPT_MAP AS SOURCE_TO_CONCEPT_MAP_FLOWSHEET_TEMP_SRC
					-- IF MEAS_VALUE NULL, SET TO 99999
	       ON coalesce(T_Temp_Source.MEAS_VALUE,99999) = source_to_concept_map_flowsheet_temp_src.source_code
            AND source_to_concept_map_flowsheet_temp_src.source_vocabulary_id = 'SH_temperature_sourc'
            
--		ON COALESCE(T_TEMP_SOURCE.MEAS_VALUE,99999)::VARCHAR = SOURCE_TO_CONCEPT_MAP_FLOWSHEET_TEMP_SRC.SOURCE_CODE
--			AND UPPER(SOURCE_TO_CONCEPT_MAP_FLOWSHEET_TEMP_SRC.SOURCE_VOCABULARY_ID) = 'SH_TEMPERATURE_SOURC'
			
	)

--SELECT * FROM T_TEMPERATURE_MERGE

SELECT DISTINCT 
--CDM.SEQ_MEASUREMENT.NEXTVAL AS MEASUREMENT_ID
	T_TEMPERATURE_MERGE.PERSON_ID
	,T_TEMPERATURE_MERGE.TARGET_CONCEPT_ID AS MEASUREMENT_CONCEPT_ID
	,CAST (T_TEMPERATURE_MERGE.RECORDED_TIME AS DATE ) AS MEASUREMENT_DATE
	,T_TEMPERATURE_MERGE.RECORDED_TIME AS MEASUREMENT_DATETIME
	,32817 AS MEASUREMENT_TYPE_CONCEPT_ID --EHR
	,4172703 AS OPERATOR_CONCEPT_ID
	,MEAS_VALUE AS VALUE_AS_NUMBER
	,0 AS VALUE_AS_CONCEPT_ID
	,COALESCE(SOURCE_TO_CONCEPT_MAP_FLOWSHEET_MEAS_UNITS.TARGET_CONCEPT_ID, 0) AS UNIT_CONCEPT_ID
	,MINVALUE AS RANGE_LOW
	,MAX_VAL AS RANGE_HIGH

	,COALESCE(VST.PROVIDER_ID, PCP.PROVIDER_ID) AS PROVIDER_ID

	,VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID AS VISIT_OCCURRENCE_ID
	    
--    ,VISIT_DETAIL.VISIT_DETAIL_ID AS VISIT_DETAIL_ID
    ,0 AS VISIT_DETAIL_ID

	,'FLWSHT: ' || T_TEMPERATURE_MERGE.FLO_MEAS_NAME || ': ' || T_TEMPERATURE_MERGE.SOURCE_CODE_DESCRIPTION AS MEASUREMENT_SOURCE_VALUE
	,0 AS MEASUREMENT_SOURCE_CONCEPT_ID
	,COALESCE(SOURCE_TO_CONCEPT_MAP_FLOWSHEET_MEAS_UNITS.SOURCE_CODE_DESCRIPTION, '') AS UNIT_SOURCE_VALUE
	,MEAS_VALUE AS VALUE_SOURCE_VALUE
	,'MEASUREMENT--CLARITYAMB--FLOWSHEET_TEMP' AS ETL_MODULE
	,VISIT_SOURCE_VALUE	


FROM T_TEMPERATURE_MERGE

    LEFT JOIN CDM.SOURCE_TO_CONCEPT_MAP AS SOURCE_TO_CONCEPT_MAP_FLOWSHEET_MEAS
    	ON T_TEMPERATURE_MERGE.FLO_MEAS_ID = SOURCE_TO_CONCEPT_MAP_FLOWSHEET_MEAS.SOURCE_CODE
    		AND UPPER(SOURCE_TO_CONCEPT_MAP_FLOWSHEET_MEAS.SOURCE_VOCABULARY_ID) = 'SH_FLWSHT_MEAS_TEMP'
    
    LEFT JOIN CDM.SOURCE_TO_CONCEPT_MAP AS SOURCE_TO_CONCEPT_MAP_FLOWSHEET_MEAS_UNITS
    	ON 
    		T_TEMPERATURE_MERGE.FLO_MEAS_ID  = SOURCE_TO_CONCEPT_MAP_FLOWSHEET_MEAS_UNITS.SOURCE_CODE 
    		AND UPPER(SOURCE_TO_CONCEPT_MAP_FLOWSHEET_MEAS_UNITS.SOURCE_VOCABULARY_ID) = 'SH_FLOWSHT_MEAS_UNIT'

    left JOIN  CDM.SOURCE_TO_CONCEPT_MAP AS SOURCE_TO_CONCEPT_MAP_AMB_VISIT
        ON  SOURCE_TO_CONCEPT_MAP_AMB_VISIT.SOURCE_CODE   = T_TEMPERATURE_MERGE.ENC_TYPE_C
            AND UPPER(SOURCE_TO_CONCEPT_MAP_AMB_VISIT.SOURCE_VOCABULARY_ID)  IN('SH_AMB_F2F')

    INNER JOIN CDM.VISIT_OCCURRENCE
    	ON T_TEMPERATURE_MERGE.PAT_ENC_CSN_ID = VISIT_OCCURRENCE.VISIT_SOURCE_VALUE
        
    LEFT JOIN CDM.PROVIDER AS VST
        ON  T_TEMPERATURE_MERGE.VISIT_PROV_ID = VST.PROVIDER_SOURCE_VALUE     
                
    LEFT JOIN CDM.PROVIDER AS PCP
        ON T_TEMPERATURE_MERGE.PCP_PROV_ID = PCP.PROVIDER_SOURCE_VALUE

	WHERE T_TEMPERATURE_MERGE.TARGET_CONCEPT_ID IS NOT NULL;