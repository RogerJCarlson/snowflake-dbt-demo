/*******************************************************************************
# Copyright 2020 Spectrum Health 
# http://www.spectrumhealth.org
#
# Unless required by applicable law or agreed to in writing, this software
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
# either express or implied.
#
********************************************************************************/
/*******************************************************************************

Name: 2c_Pull_hsp_visit_occurrence_531

Author: Roger Carlson
        Spectrum Health
        roger.carlson@spectrumhealth.org

Last Revised: 14-June-2020
    
Description: This script is the 1st it a two-part process.  It is used in conjunction with 
    (and before) app_visit_occurrence_hsp_3. 

    Its purpose is to query data from Epic Clarity and append this data to VISIT_OCCURRENCE_ClarityHosp_ALL
    which will be used later in app_visit_occurrence_hsp_3.  The table may have numerous
    extraneous fields which can be used for verifying the base data returned from Clarity. 

    VISIT_OCCURRENCE_ClarityHosp_ALL may also be used in conjunction with other "APP_" scripts.

Structure: (if your structure is different, you will have to modify the code to match)
    Databases:SH_OMOP_DB_PROD, SH_CLINICAL_DB_PROD
    Schemas: SH_OMOP_DB_PROD.OMOP_CLARITY, SH_OMOP_DB_PROD.CDM, SH_CLINICAL_DB_PROD.EPIC_CLARITY_LZ

Note: I don't use aliases unless necessary for joining. I find them more confusing than helpful.

********************************************************************************/
--USE ROLE SF_SH_OMOP_DEVELOPER;
--USE SCHEMA SH_CLINICAL_DB_PROD.EPIC_CLARITY_LZ;
--USE WAREHOUSE SH_OMOP_DATA_SCIENCE_WH;

CREATE OR REPLACE TABLE SH_OMOP_DB_PROD.OMOP_CLARITY.VISIT_DETAIL_CLARITYHOSP_ALL 
AS

SELECT DISTINCT SUBSTRING(CDM.AOU_DRIVER.AOU_ID, 2, LEN(CDM.AOU_DRIVER.AOU_ID)) AS PERSON_ID
    , CDM.AOU_DRIVER.AOU_ID
    , PAT_ENC_HSP.PAT_ID
    , PAT_ENC_HSP.PAT_ENC_CSN_ID
    , RANK() OVER (
        PARTITION BY PAT_ENC_HSP.PAT_ENC_CSN_ID ORDER BY CLARITY_ADT_A.SEQ_NUM_IN_ENC
            , CLARITY_ADT_A.EFFECTIVE_TIME
        ) AS RA
    , ROW_NUMBER() OVER (
        ORDER BY PAT_ENC_HSP.PAT_ENC_CSN_ID
            , CLARITY_ADT_A.SEQ_NUM_IN_ENC
            , CLARITY_ADT_A.EFFECTIVE_TIME
        ) AS VISIT_DETAIL_ID
    , PAT_ENC_HSP.HOSP_ADMSN_TYPE_C
    , CLARITY_ADT_A.PAT_SERVICE_C
    , PAT_ENC_HSP.ADT_PAT_CLASS_C
    , ZC_PAT_CLASS.NAME AS ADT_PAT_CLASS_NAME
    , CLARITY_ADT_A.PAT_LVL_OF_CARE_C --used for VISIT_DETAIL_SOURCE_VALUE WHEN ICU 
    
    --used for VISIT_DETAIL_SOURCE_CONCEPT
    , CASE 
        WHEN CLARITY_ADT_A.PAT_LVL_OF_CARE_C = 6
            THEN 9999 -- ICU
        ELSE PAT_ENC_HSP.ADT_PAT_CLASS_C
        END AS VISIT_DETAIL_SOURCE_CONCEPT --used for VISIT_DETAIL_SOURCE_CONCEPT_ID WHEN ICU 
        
        
    --used for VISIT_DETAIL_SOURCE_VALUE 
    , CASE 
        WHEN CLARITY_PRC.PRC_NAME IS NOT NULL
            THEN CAST(CLARITY_DEP.DEPARTMENT_NAME || '_' || CLARITY_PRC.PRC_NAME AS VARCHAR) 
        WHEN CLARITY_ADT_A.ROOM_ID IS NOT NULL
            AND ZC_PAT_SERVICE.NAME IS NOT NULL
            THEN CLARITY_DEP.DEPARTMENT_NAME || '_' || CLARITY_ADT_A.ROOM_ID || '_' || CLARITY_ADT_A.BED_ID || '_' || ZC_PAT_SERVICE.NAME
        ELSE CAST(CLARITY_DEP.DEPARTMENT_NAME AS VARCHAR)
        END AS VISIT_DETAIL_SOURCE_VALUE   
     
        
--ADMIT TIMES
    , PAT_ENC_HSP.HOSP_ADMSN_TIME
    , PAT_ENC_HSP.INP_ADM_DATE
    , PAT_ENC_HSP.EXP_ADMISSION_TIME
    , PAT_ENC_HSP.OP_ADM_DATE
    , PAT_ENC_HSP.EMER_ADM_DATE
    , PAT_ENC_HSP.INSTANT_OF_ENTRY_TM
    , CLARITY_ADT_A.EFFECTIVE_TIME AS A_EFFECTIVE_TIME
    , PAT_ENC.CHECKIN_TIME
    , PAT_ENC.APPT_TIME
    , PAT_ENC_HSP.CONTACT_DATE
--DISCHARGE TIMES
    , PAT_ENC_HSP.HOSP_DISCH_TIME
    , PAT_ENC_HSP.ED_DISP_TIME
    , CLARITY_ADT_B.EFFECTIVE_TIME AS B_EFFECTIVE_TIME 
    , PAT_ENC.CHECKOUT_TIME
    , PAT_ENC_HSP.HOSPITAL_AREA_ID
    , PAT_ENC_HSP.HSP_ACCOUNT_ID
    , PAT_ENC_HSP.INPATIENT_DATA_ID
    , PAT_ENC_HSP.IP_EPISODE_ID
    , PAT_ENC_HSP.ED_EPISODE_ID
    , PAT_ENC_HSP.ED_DISPOSITION_C
    , ZC_ED_DISPOSITION.NAME AS ED_DISPOSITION_NAME --(ZC_ED_DISPOSITION IS NOT IN TABLE LIST AT PRESENT)
    , PAT_ENC_HSP.ADMIT_SOURCE_C
    , ZC_ADM_SOURCE.NAME AS ADMIT_SOURCE_NAME
    , PAT_ENC_HSP.DISCH_DISP_C
    , ZC_DISCH_DISP.NAME AS DISCH_DISP_NAME
    , PAT_ENC_HSP.BILL_ATTEND_PROV_ID
    , PAT_ENC_HSP.ADT_PATIENT_STAT_C
    , ZC_PAT_STATUS.NAME AS ADT_PATIENT_STAT_NAME
    , HSP_ACCOUNT.ATTENDING_PROV_ID
    , HSP_ACCOUNT.REFERRING_PROV_ID
    , HSP_ACCOUNT.ADM_DATE_TIME
    , HSP_ACCOUNT.DISCH_DATE_TIME
    , CLARITY_DEP.DEPARTMENT_NAME
    , CLARITY_PRC.PRC_NAME --(CLARITY_PRC IS NOT IN TABLE LIST AT PRESENT)
    , CLARITY_ADT_A.ROOM_ID
    , CLARITY_ADT_A.BED_ID
    , ZC_PAT_SERVICE.NAME AS HOSP_SERV_NAME
    , PAT_ENC_HSP.PAT_ENC_CSN_ID AS VISIT_SOURCE_VALUE


FROM SH_CLINICAL_DB_PROD.EPIC_CLARITY_LZ.PAT_ENC_HSP

    INNER JOIN SH_CLINICAL_DB_PROD.EPIC_CLARITY_LZ.PAT_ENC
        ON PAT_ENC_HSP.PAT_ENC_CSN_ID = PAT_ENC.PAT_ENC_CSN_ID
    
    INNER JOIN SH_OMOP_DB_PROD.CDM.AOU_DRIVER
        ON PAT_ENC_HSP.PAT_ID = CDM.AOU_DRIVER.EPIC_PAT_ID
    
    LEFT JOIN SH_CLINICAL_DB_PROD.EPIC_CLARITY_LZ.CLARITY_ADT  CLARITY_ADT_A
        ON PAT_ENC_HSP.PAT_ENC_CSN_ID = CLARITY_ADT_A.PAT_ENC_CSN_ID
            AND CLARITY_ADT_A.EVENT_TYPE_C NOT IN (4, 5, 6)
            AND CLARITY_ADT_A.SEQ_NUM_IN_ENC IS NOT NULL
    
    INNER JOIN SH_CLINICAL_DB_PROD.EPIC_CLARITY_LZ.CLARITY_ADT  CLARITY_ADT_B
        ON CLARITY_ADT_A.PAT_ID = CLARITY_ADT_B.PAT_ID
            AND CLARITY_ADT_A.PAT_ENC_CSN_ID = CLARITY_ADT_B.PAT_ENC_CSN_ID
            AND CLARITY_ADT_B.EVENT_TYPE_C IN (2, 4)
            AND CLARITY_ADT_B.EVENT_ID IN (CLARITY_ADT_A.NEXT_OUT_EVENT_ID)
    
    LEFT JOIN SH_CLINICAL_DB_PROD.EPIC_CLARITY_LZ.ZC_PAT_CLASS
        ON pat_enc_hsp.ADT_PAT_CLASS_C = ZC_PAT_CLASS.ADT_PAT_CLASS_C
    
    LEFT JOIN SH_CLINICAL_DB_PROD.EPIC_CLARITY_LZ.ZC_PAT_STATUS
        ON pat_enc_hsp.ADT_PATIENT_STAT_C = ZC_PAT_STATUS.ADT_PATIENT_STAT_C
    
    LEFT JOIN SH_CLINICAL_DB_PROD.EPIC_CLARITY_LZ.ZC_ADM_SOURCE
        ON pat_enc_hsp.ADMIT_SOURCE_C = ZC_ADM_SOURCE.ADMIT_SOURCE_C
    
    LEFT JOIN SH_CLINICAL_DB_PROD.EPIC_CLARITY_LZ.ZC_DISCH_DISP
        ON pat_enc_hsp.DISCH_DISP_C = ZC_DISCH_DISP.DISCH_DISP_C
    
    -- add when ZC_ED_DISPOSITION available
LEFT JOIN SH_CLINICAL_DB_PROD.EPIC_CLARITY_LZ.ZC_ED_DISPOSITION
    ON pat_enc_hsp.ED_DISPOSITION_C = ZC_ED_DISPOSITION.ED_DISPOSITION_C
        
    LEFT JOIN SH_CLINICAL_DB_PROD.EPIC_CLARITY_LZ.HSP_ACCOUNT
        ON PAT_ENC_HSP.HSP_ACCOUNT_ID = HSP_ACCOUNT.HSP_ACCOUNT_ID
    
    LEFT JOIN SH_CLINICAL_DB_PROD.EPIC_CLARITY_LZ.CLARITY_DEP 
        ON PAT_ENC_HSP.DEPARTMENT_ID = CLARITY_DEP.DEPARTMENT_ID
    
    -- add when CLARITY_PRC available
LEFT JOIN SH_CLINICAL_DB_PROD.EPIC_CLARITY_LZ.CLARITY_PRC 
    ON CLARITY_PRC.PRC_ID = PAT_ENC.APPT_PRC_ID
        
    LEFT JOIN SH_CLINICAL_DB_PROD.EPIC_CLARITY_LZ.ZC_PAT_SERVICE 
        ON CLARITY_ADT_A.PAT_SERVICE_C = ZC_PAT_SERVICE.HOSP_SERV_C
    
WHERE HOSP_DISCH_TIME IS NOT NULL;
    
