/*******************************************************************************
# COPYRIGHT 2020 SPECTRUM HEALTH 
# HTTP://WWW.SPECTRUMHEALTH.ORG
#
# UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING, THIS SOFTWARE
# IS DISTRIBUTED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
# EITHER EXPRESS OR IMPLIED.
#
********************************************************************************/

/*******************************************************************************
NAME: APP_CONDITION_OCCURRENCE_ICD_HSP_2

AUTHOR: ROGER CARLSON
		SPECTRUM HEALTH
		ROGER.CARLSON@SPECTRUMHEALTH.ORG

LAST REVISED: 14-JUNE-2020
		
DESCRIPTION: THIS SCRIPT IS THE 2ND IT A TWO-PART PROCESS.  IT IS USED IN CONJUNCTION WITH 
	(AND FOLLOWING) PULL_CONDITION_OCCURRENCE_ICD_HSP_2. 

	ITS PURPOSE IS TO JOIN THE DATA IN CONDITION_OCCURRENCE_CLARITYHOSP_ICD TO THE OMOP CONCEPT TABLE
	TO RETURN STANDARD CONCEPT IDS, AND APPEND THIS DATA TO OMOP.CONDITION_OCCURRENCE.

STRUCTURE: (IF YOUR STRUCTURE IS DIFFERENT, YOU WILL HAVE TO MODIFY THE CODE TO MATCH)
	DATABASE:EPICCARE
	SCHEMAS: EPICCARE.OMOP, EPICCARE.OMOP_CLARITY

NOTE: I DON'T USE ALIASES UNLESS NECESSARY FOR JOINING. I FIND THEM MORE CONFUSING THAN HELPFUL.

********************************************************************************/

--USE DATABASE SH_OMOP_DB_PROD;
----USE SCHEMA OMOP_CLARITY;
--USE ROLE SF_SH_OMOP_DEVELOPER;
--USE WAREHOUSE SH_OMOP_DATA_SCIENCE_WH;

----CREATE OR REPLACE SEQUENCE OMOP.SEQ_CONDITION_OCCURRENCE START = 1 INCREMENT = 1;

--DELETE FROM OMOP.CONDITION_OCCURRENCE
--WHERE ETL_MODULE =  'CONDITION_OCCURRENCE--CLARITYHOSP--ICD';


INSERT INTO OMOP.CONDITION_OCCURRENCE (
	--CONDITION_OCCURRENCE_ID
	PERSON_ID
	,CONDITION_CONCEPT_ID
	,CONDITION_START_DATE
	,CONDITION_START_DATETIME
	,CONDITION_END_DATE
	,CONDITION_END_DATETIME
	,CONDITION_TYPE_CONCEPT_ID
	,STOP_REASON
	,PROVIDER_ID
	,VISIT_OCCURRENCE_ID
	,CONDITION_SOURCE_VALUE
	,CONDITION_SOURCE_CONCEPT_ID
	,CONDITION_STATUS_SOURCE_VALUE
	,CONDITION_STATUS_CONCEPT_ID
	, ETL_MODULE
	,VISIT_SOURCE_VALUE
	)

WITH 
T_ICD_SOURCE
AS (
	SELECT CONCEPT_ID
		,CONCEPT_CODE
		,REPLACE(CONCEPT_NAME,'"','') AS CONCEPT_NAME
	FROM OMOP.CONCEPT AS C
	WHERE C.VOCABULARY_ID IN (
			'ICD9CM',
			'ICD10CM'
			)
		AND (
			C.INVALID_REASON IS NULL
			OR C.INVALID_REASON = ''
			)
		AND C.DOMAIN_ID = 'Condition'
	)

,
T_CONCEPT
AS (
	SELECT C2.CONCEPT_ID AS CONCEPT_ID
		,C1.CONCEPT_ID AS SOURCE_CONCEPT_ID
	
	FROM OMOP.CONCEPT C1
	
		JOIN OMOP.CONCEPT_RELATIONSHIP CR
			ON C1.CONCEPT_ID = CR.CONCEPT_ID_1
				AND CR.RELATIONSHIP_ID = 'Maps to'
		
		JOIN OMOP.CONCEPT C2
			ON C2.CONCEPT_ID = CR.CONCEPT_ID_2
	
	WHERE C2.STANDARD_CONCEPT = 'S'
		AND (
			C2.INVALID_REASON IS NULL
			OR C2.INVALID_REASON = ''
			)
		AND C2.DOMAIN_ID = 'Condition'
	)

SELECT DISTINCT 
	--OMOP.SEQ_CONDITION_OCCURRENCE.NEXTVAL AS CONDITION_OCCURRENCE_ID
	CONDITION_OCCURRENCE_CLARITYHOSP_ICD.PERSON_ID
	,CASE 
		WHEN CONDITION_OCCURRENCE_CLARITYHOSP_ICD.HOSP_ADMSN_TIME >= '2015-10-01'
			THEN T_ICD10_CONCEPT.CONCEPT_ID
		ELSE T_ICD9_CONCEPT.CONCEPT_ID
		END AS CONDITION_CONCEPT_ID

	,CAST( CONDITION_OCCURRENCE_CLARITYHOSP_ICD.HOSP_ADMSN_TIME AS DATE) AS CONDITION_START_DATE
	,CONDITION_OCCURRENCE_CLARITYHOSP_ICD.HOSP_ADMSN_TIME AS CONDITION_START_DATETIME
	,CAST( CONDITION_OCCURRENCE_CLARITYHOSP_ICD.HOSP_DISCH_TIME AS DATE) AS CONDITION_END_DATE
	,CONDITION_OCCURRENCE_CLARITYHOSP_ICD.HOSP_DISCH_TIME AS CONDITION_END_DATETIME
	,32817 AS CONDITION_TYPE_CONCEPT_ID
	,CASE 
		WHEN DISCH_DISP_C = 20
			THEN 'EXPIRED'
		ELSE 'DISCHARGED'
		END AS STOP_REASON
	,PROVIDER.PROVIDER_ID AS PROVIDER_ID
	,VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID AS VISIT_OCCURRENCE_ID

-- RETURNS ICD10 CODES AFTER SWITCH DATE-----
	,CASE
		WHEN CONDITION_OCCURRENCE_CLARITYHOSP_ICD.HOSP_ADMSN_TIME >= '2015-10-01'
		THEN 	LEFT(T_ICD10_SOURCE.CONCEPT_CODE || ':' || T_ICD10_SOURCE.CONCEPT_NAME,50)
		ELSE	LEFT(T_ICD9_SOURCE.CONCEPT_CODE || ':' || T_ICD9_SOURCE.CONCEPT_NAME,50)
	END AS CONDITION_SOURCE_VALUE
	,CASE
		WHEN CONDITION_OCCURRENCE_CLARITYHOSP_ICD.HOSP_ADMSN_TIME >= '2015-10-01'
		THEN	T_ICD10_SOURCE.CONCEPT_ID 
		ELSE 	T_ICD9_SOURCE.CONCEPT_ID
	END AS CONDITION_SOURCE_CONCEPT_ID
--------------------------------------------

	,'FINAL DIAGNOSIS' AS CONDITION_STATUS_SOURCE_VALUE
	,4230359 AS CONDITION_STATUS_CONCEPT_ID
	, 'CONDITION_OCCURRENCE--CLARITYHOSP--ICD'	AS ETL_MODULE 
	,VISIT_SOURCE_VALUE

FROM OMOP_CLARITY.CONDITION_OCCURRENCE_CLARITYHOSP_ICD

	INNER JOIN OMOP.VISIT_OCCURRENCE
		ON CONDITION_OCCURRENCE_CLARITYHOSP_ICD.PAT_ENC_CSN_ID = VISIT_OCCURRENCE.VISIT_SOURCE_VALUE

	LEFT OUTER JOIN OMOP.PROVIDER
		ON CONDITION_OCCURRENCE_CLARITYHOSP_ICD.CALC_ATTEND_PROV_ID = PROVIDER.PROVIDER_SOURCE_VALUE

--------CONCEPT MAPPING--------------------

	LEFT JOIN T_ICD_SOURCE AS T_ICD9_SOURCE 
			ON CONDITION_OCCURRENCE_CLARITYHOSP_ICD.ICD9_CODE = T_ICD9_SOURCE.CONCEPT_CODE

	LEFT JOIN T_ICD_SOURCE AS T_ICD10_SOURCE 
			ON CONDITION_OCCURRENCE_CLARITYHOSP_ICD.ICD10_CODE = T_ICD10_SOURCE.CONCEPT_CODE

	LEFT JOIN T_CONCEPT AS T_ICD9_CONCEPT
		ON T_ICD9_CONCEPT.SOURCE_CONCEPT_ID = T_ICD9_SOURCE.CONCEPT_ID

	LEFT JOIN T_CONCEPT AS T_ICD10_CONCEPT
		ON T_ICD10_CONCEPT.SOURCE_CONCEPT_ID = T_ICD10_SOURCE.CONCEPT_ID
		
-------------------------------------------
WHERE 	
	((CONDITION_OCCURRENCE_CLARITYHOSP_ICD.HOSP_ADMSN_TIME >= '2015-10-01' AND T_ICD10_CONCEPT.CONCEPT_ID IS NOT NULL)   
	OR 
	(CONDITION_OCCURRENCE_CLARITYHOSP_ICD.HOSP_ADMSN_TIME < '2015-10-01' AND T_ICD9_CONCEPT.CONCEPT_ID IS NOT NULL   ));

--SELECT count(*) FROM SH_OMOP_DB_PROD.OMOP.CONDITION_OCCURRENCE;
